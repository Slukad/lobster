// <auto-generated />
using System;
using Adventure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Adventure.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20200205203635_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Adventure.Models.Custom.Adventure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Adventure");
                });

            modelBuilder.Entity("Adventure.Models.Custom.Choice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DecisionId")
                        .HasColumnType("int");

                    b.Property<int?>("NextDecisionId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DecisionId");

                    b.HasIndex("NextDecisionId");

                    b.ToTable("Choice");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Text = "Yes"
                        },
                        new
                        {
                            Id = 2,
                            Text = "No"
                        },
                        new
                        {
                            Id = 3,
                            Text = "Yes"
                        },
                        new
                        {
                            Id = 4,
                            Text = "No"
                        },
                        new
                        {
                            Id = 5,
                            Text = "Yes"
                        },
                        new
                        {
                            Id = 6,
                            Text = "No"
                        },
                        new
                        {
                            Id = 7,
                            Text = "Yes"
                        },
                        new
                        {
                            Id = 8,
                            Text = "No"
                        },
                        new
                        {
                            Id = 9,
                            Text = "Yes"
                        },
                        new
                        {
                            Id = 10,
                            Text = "No"
                        },
                        new
                        {
                            Id = 11,
                            Text = "Yes"
                        },
                        new
                        {
                            Id = 12,
                            Text = "No"
                        },
                        new
                        {
                            Id = 13,
                            Text = "Yes"
                        },
                        new
                        {
                            Id = 14,
                            Text = "No"
                        },
                        new
                        {
                            Id = 15,
                            Text = "Yes"
                        },
                        new
                        {
                            Id = 16,
                            Text = "No"
                        },
                        new
                        {
                            Id = 17,
                            Text = "Yes"
                        },
                        new
                        {
                            Id = 18,
                            Text = "No"
                        });
                });

            modelBuilder.Entity("Adventure.Models.Custom.Decision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Decision");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Level = 1,
                            Order = 1,
                            Text = "Are your reflexes below average?"
                        },
                        new
                        {
                            Id = 2,
                            Level = 2,
                            Order = 1,
                            Text = "Do you like arcade-type games?"
                        },
                        new
                        {
                            Id = 3,
                            Level = 2,
                            Order = 2,
                            Text = "Are you into sports?"
                        },
                        new
                        {
                            Id = 4,
                            Level = 3,
                            Order = 1,
                            Text = "Are you ok using small devices?"
                        },
                        new
                        {
                            Id = 5,
                            Level = 3,
                            Order = 2,
                            Text = "Do you enjoy simulations?"
                        },
                        new
                        {
                            Id = 6,
                            Level = 3,
                            Order = 3,
                            Text = "Are you into football?"
                        },
                        new
                        {
                            Id = 7,
                            Level = 3,
                            Order = 4,
                            Text = "Are you into FPS games?"
                        },
                        new
                        {
                            Id = 8,
                            Level = 4,
                            Order = 1,
                            Text = "Are you ok with microtransactions?"
                        },
                        new
                        {
                            Id = 9,
                            Level = 4,
                            Order = 2,
                            Text = "Good Storytelling?"
                        },
                        new
                        {
                            Id = 10,
                            Level = 4,
                            Order = 3,
                            Text = "Play Cities Skilynes"
                        },
                        new
                        {
                            Id = 11,
                            Level = 4,
                            Order = 4,
                            Text = "Play Assassins Creed"
                        },
                        new
                        {
                            Id = 12,
                            Level = 4,
                            Order = 5,
                            Text = "Play FIFA 2020"
                        },
                        new
                        {
                            Id = 13,
                            Level = 4,
                            Order = 6,
                            Text = "Play Mario Kart"
                        },
                        new
                        {
                            Id = 14,
                            Level = 4,
                            Order = 7,
                            Text = "Play Apex Legends"
                        },
                        new
                        {
                            Id = 15,
                            Level = 4,
                            Order = 8,
                            Text = "Play League of legends"
                        },
                        new
                        {
                            Id = 16,
                            Level = 5,
                            Order = 1,
                            Text = "Play Tekken"
                        },
                        new
                        {
                            Id = 17,
                            Level = 5,
                            Order = 2,
                            Text = "Play Metal Slug"
                        },
                        new
                        {
                            Id = 18,
                            Level = 5,
                            Order = 1,
                            Text = "Play Candy crush"
                        },
                        new
                        {
                            Id = 19,
                            Level = 5,
                            Order = 2,
                            Text = "PlayPlague inc"
                        });
                });

            modelBuilder.Entity("Adventure.Models.Custom.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("Adventure.Models.Custom.SelectedChoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdventureId")
                        .HasColumnType("int");

                    b.Property<int?>("ChoiceId")
                        .HasColumnType("int");

                    b.Property<int>("DecisionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdventureId");

                    b.HasIndex("ChoiceId");

                    b.HasIndex("DecisionId");

                    b.ToTable("SelectedChoice");
                });

            modelBuilder.Entity("Adventure.Models.Custom.Adventure", b =>
                {
                    b.HasOne("Adventure.Models.Custom.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId");
                });

            modelBuilder.Entity("Adventure.Models.Custom.Choice", b =>
                {
                    b.HasOne("Adventure.Models.Custom.Decision", "Decision")
                        .WithMany("Choices")
                        .HasForeignKey("DecisionId");

                    b.HasOne("Adventure.Models.Custom.Decision", "NextDecision")
                        .WithMany("NextDecisionChoices")
                        .HasForeignKey("NextDecisionId");
                });

            modelBuilder.Entity("Adventure.Models.Custom.SelectedChoice", b =>
                {
                    b.HasOne("Adventure.Models.Custom.Adventure", "Adventure")
                        .WithMany("SelectedChoices")
                        .HasForeignKey("AdventureId");

                    b.HasOne("Adventure.Models.Custom.Choice", "Choice")
                        .WithMany("SelectedChoices")
                        .HasForeignKey("ChoiceId");

                    b.HasOne("Adventure.Models.Custom.Decision", null)
                        .WithMany()
                        .HasForeignKey("DecisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
